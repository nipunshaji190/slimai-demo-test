version: "2.1"
description: "a sample orb-abcd"

orbs:
    slim: slimai-dev/slim@dev:first
    aws-ecr: circleci/aws-ecr@6.12.2
    aws-ecs: circleci/aws-ecs@1.3.0

workflows:
  slim_and_push:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: PRE_AWS_ECR_ACCOUNT_URL
          aws-access-key-id: PRE_AWS_ACCESS_KEY_ID
          aws-secret-access-key: PRE_AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          no-output-timeout: 20m
          region: PRE_AWS_REGION
          repo: $PRE_REPO
          skip-when-tags-exist: false
          tag: $PRE_TAG
      - aws-ecs/deploy-service-update:
          requires:
             - aws-ecr/build-and-push-image
          aws-access-key-id: $PRE_AWS_ACCESS_KEY_ID
          aws-secret-access-key: $PRE_AWS_SECRET_ACCESS_KEY
          aws-region: $PRE_AWS_REGION 
          family: $PRE_FAMILY
          service-name: $PRE_SERVICE_NAME
          cluster-name: $PRE_CLUSTER_NAME
          container-image-name-updates: 'container=$PRE_CONTAINER_NAME,tag=$PRE_TAG'  
          force-new-deployment: true
      - slim/slim:
          requires:
             - aws-ecs/deploy-service-update
          dockerhub-username: $DOCKER_USERNAME
          dockerhub-password: $DOCKER_PASSWORD
          slim-ai-username: $SLIM_AI_USERNAME
          slim-ai-password: $SLIM_AI_PASSWORD
          slim-ai-org-id: $SLIM_ORG_ID
          aws-repo-name: $REPO
          docker-repo-name: $REPO
          aws-ecr-account-url: AWS_ECR_ACCOUNT_URL
          docker-namespace: $NAMESPACE
          tag: $TAG
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          aws-cluster-name: $SLIM_AWS_CLUSTER_NAME
          aws-container-name: $SLIM_AWS_CONTAINER
          aws-family: $SLIM_AWS_FAMILY
          aws-service-name: $SLIM_AWS_SERVICE_NAME
          
    
